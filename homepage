import React, { useState } from 'react';
import { Search, Heart, Coffee, Scissors, Home, MapPin, Star } from 'lucide-react';

const locations = [
  {
    id: 1,
    title: "Therpup Dog Cafe",
    category: "Cafes",
    location: "Whitefield, Bangalore",
    features: ["Outdoor Seating", "Dog Menu", "Dog Pool"],
    rating: 4.8,
    reviews: 342,
    priceRange: "₹₹",
    image: "/api/placeholder/800/600",
    description: "Dog-friendly cafe with special menu for pets",
    timing: "11 AM - 8 PM"
  },
  {
    id: 2,
    title: "Pawsome Stay",
    category: "Pet Boarding",
    location: "Indiranagar, Bangalore",
    features: ["24/7 Care", "Webcam Access", "Daily Updates"],
    rating: 4.7,
    reviews: 189,
    priceRange: "₹₹₹",
    image: "/api/placeholder/800/600",
    description: "Luxury pet boarding with constant care",
    timing: "Open 24/7"
  },
  {
    id: 3,
    title: "Cubbon Dog Park",
    category: "Parks",
    location: "Central Bangalore",
    features: ["Off-leash Area", "Water Station", "Agility Equipment"],
    rating: 4.6,
    reviews: 567,
    priceRange: "Free",
    image: "/api/placeholder/800/600",
    description: "Large dog park with designated play areas",
    timing: "6 AM - 8 PM"
  }
];

const categories = [
  {
    name: "All",
    icon: Heart
  },
  {
    name: "Cafes",
    icon: Coffee
  },
  {
    name: "Groomers",
    icon: Scissors
  },
  {
    name: "Pet Boarding",
    icon: Home
  },
  {
    name: "Parks",
    icon: MapPin
  },
  {
    name: "Pet Shops",
    icon: Heart
  }
];

const PetFriendlyLocations = () => {
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("All");

  const filteredLocations = locations.filter(location => {
    const matchesSearch = location.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         location.location.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesCategory = selectedCategory === "All" || location.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  return (
    <div className="max-w-7xl mx-auto px-4 py-8">
      {/* Header */}
      <div className="flex justify-between items-center mb-8">
        <div className="flex items-center gap-2 text-2xl font-bold">
          <Heart className="text-purple-600" />
          <span>petfrndly.club</span>
        </div>
        <button className="px-4 py-2 border rounded-full flex items-center gap-2 hover:bg-purple-50">
          List Your Place
        </button>
      </div>

      {/* Hero Section */}
      <div className="text-center mb-12">
        <h1 className="text-5xl font-bold mb-6">Discover pet-friendly places</h1>
        <h2 className="text-4xl mb-8">in Bangalore</h2>
        
        {/* Search Bar */}
        <div className="relative max-w-2xl mx-auto">
          <input
            type="text"
            placeholder="Search by location name or area..."
            className="w-full px-6 py-4 rounded-full border text-lg shadow-sm focus:ring-2 focus:ring-purple-300 focus:border-purple-300"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
          />
          <Search className="absolute right-6 top-1/2 transform -translate-y-1/2 text-gray-400" />
        </div>
      </div>

      {/* Category Filters */}
      <div className="mb-8">
        <h2 className="text-2xl font-bold mb-4">Explore Places</h2>
        <p className="text-gray-600 mb-4">Find the perfect pet-friendly spot in your neighborhood</p>
        <div className="flex gap-4 flex-wrap">
          {categories.map(({ name, icon: Icon }) => (
            <button
              key={name}
              className={`px-4 py-2 rounded-full flex items-center gap-2 transition-all ${
                selectedCategory === name
                  ? "bg-purple-600 text-white"
                  : "bg-white border hover:border-purple-300 hover:bg-purple-50"
              }`}
              onClick={() => setSelectedCategory(name)}
            >
              <Icon size={18} />
              {name}
            </button>
          ))}
        </div>
      </div>

      {/* Location Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredLocations.map((location) => (
          <div key={location.id} className="rounded-2xl overflow-hidden shadow-lg border hover:shadow-xl transition-shadow">
            <img
              src={location.image}
              alt={location.title}
              className="w-full h-48 object-cover"
            />
            <div className="p-4">
              <div className="flex justify-between items-start mb-2">
                <h3 className="text-xl font-bold">{location.title}</h3>
                <div className="flex items-center gap-1">
                  <Star className="fill-yellow-400 text-yellow-400" size={18} />
                  <span>{location.rating}</span>
                  <span className="text-gray-500 text-sm">({location.reviews})</span>
                </div>
              </div>
              <div className="text-gray-500 mb-2">{location.location}</div>
              <div className="text-sm text-gray-600 mb-3">{location.description}</div>
              <div className="flex flex-wrap gap-2 mb-3">
                {location.features.map((feature, index) => (
                  <span key={index} className="px-2 py-1 bg-purple-50 text-purple-600 rounded-full text-sm">
                    {feature}
                  </span>
                ))}
              </div>
              <div className="flex justify-between items-center text-sm">
                <span className="text-gray-600">{location.timing}</span>
                <span className="font-medium">{location.priceRange}</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default PetFriendlyLocations;
